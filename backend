from flask import Flask, request, jsonify
import pytesseract
from PIL import Image
import base64
import sqlite3

app = Flask(__name__)
DATABASE = 'database.db'

def init_db():
    conn = sqlite3.connect(DATABASE)
    conn.execute('CREATE TABLE IF NOT EXISTS uploads (id INTEGER PRIMARY KEY AUTOINCREMENT, image BLOB, text TEXT, bold_words TEXT)')
    conn.commit()
    conn.close()

@app.route('/upload', methods=['POST'])
def upload_image():
    if 'image' not in request.files:
        return jsonify({'error': 'No image provided'}), 400

    file = request.files['image']
    if file.filename == '':
        return jsonify({'error': 'No selected file'}), 400

    image = Image.open(file)
    text = pytesseract.image_to_string(image)
    bold_words = [word for word in text.split() if word.isupper()]

    with sqlite3.connect(DATABASE) as conn:
        cursor = conn.cursor()
        cursor.execute('INSERT INTO uploads (image, text, bold_words) VALUES (?, ?, ?)', (base64.b64encode(file.read()), text, ' '.join(bold_words)))
        conn.commit()

    return jsonify({'text': text, 'bold_words': bold_words}), 200

@app.route('/images/<int:image_id>', methods=['GET'])
def get_image(image_id):
    with sqlite3.connect(DATABASE) as conn:
        cursor = conn.cursor()
        cursor.execute('SELECT image, text, bold_words FROM uploads WHERE id = ?', (image_id,))
        result = cursor.fetchone()
        if result:
            image = base64.b64decode(result[0])
            text = result[1]
            bold_words = result[2].split()
            return jsonify({'image': image, 'text': text, 'bold_words': bold_words}), 200
        else:
            return jsonify({'error': 'Image not found'}), 404

if __name__ == '__main__':
    init_db()
    app.run(debug=True)
